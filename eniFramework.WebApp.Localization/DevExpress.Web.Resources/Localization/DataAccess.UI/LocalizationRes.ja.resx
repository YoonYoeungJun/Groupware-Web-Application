<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataAccessUIStringId.MessageBoxErrorTitle" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="DataAccessUIStringId.MessageBoxWarningTitle" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorEqualOperator" xml:space="preserve">
    <value>等しい</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorGreaterOperator" xml:space="preserve">
    <value>大きい</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorGreaterOrEqualOperator" xml:space="preserve">
    <value>以上</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorLessOrEqualOperator" xml:space="preserve">
    <value>以下</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorNotEqualOperator" xml:space="preserve">
    <value>等しくない</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorEmptyColumnText" xml:space="preserve">
    <value>&lt; 列を選択します &gt;</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorEmptyTableText" xml:space="preserve">
    <value>&lt; テーブルを選択します &gt;</value>
  </data>
  <data name="DataAccessUIStringId.QueryDesignControlTableNameAlreadyExists" xml:space="preserve">
    <value>指定したテーブル名は既に存在します。別のテーブル名を指定してください</value>
  </data>
  <data name="DataAccessUIStringId.DataSourceName" xml:space="preserve">
    <value>データ ソース名: {0}</value>
  </data>
  <data name="DataAccessUIStringId.JoinEditorLessOperator" xml:space="preserve">
    <value>はより小さい</value>
  </data>
  <data name="DataAccessUIStringId.SortingTypeAscending" xml:space="preserve">
    <value>昇順</value>
  </data>
  <data name="DataAccessUIStringId.SortingTypeDescending" xml:space="preserve">
    <value>降順</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilderTable" xml:space="preserve">
    <value>テーブル</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilderColumn" xml:space="preserve">
    <value>列</value>
  </data>
  <data name="DataAccessUIStringId.MessageBoxConfirmationTitle" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="DataAccessUIStringId.MessageMissingConnection" xml:space="preserve">
    <value>接続が指定されていません</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilderColumnsOf" xml:space="preserve">
    <value>{0} の列</value>
  </data>
  <data name="DataAccessUIStringId.SqlDataSourceDesignerVerbRebuildSchema" xml:space="preserve">
    <value>スキーマを再構築</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseConnection" xml:space="preserve">
    <value>既存のデータ接続を使用しますか?</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseDataSourceName" xml:space="preserve">
    <value>データ ソース名を入力してください。</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseDSType" xml:space="preserve">
    <value>データ ソースの種類を選択します。</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseEFDataMember" xml:space="preserve">
    <value>データ メンバーを選択</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseObjectBindingMode" xml:space="preserve">
    <value>データ バインディング モードを選択します</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseObjectConstructor" xml:space="preserve">
    <value>データ ソースのコンス トラクターを選択します</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseObjectType" xml:space="preserve">
    <value>データ ソースの種類を選択します</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageEFConnectionProperties" xml:space="preserve">
    <value>接続文字列を指定します</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageObjectConstructorParameters" xml:space="preserve">
    <value>コンス トラクター パラメーターを指定します</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageObjectMemberParameters" xml:space="preserve">
    <value>メソッドのパラメーターを指定します</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageSaveConnection" xml:space="preserve">
    <value>接続文字列を保存します</value>
  </data>
  <data name="DataAccessUIStringId.WizardTitleDatasource" xml:space="preserve">
    <value>データ ソース ウィザード</value>
  </data>
  <data name="DataAccessUIStringId.WizardTitleODS" xml:space="preserve">
    <value>ObjectDataSource ウィザード</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionEditorTitle" xml:space="preserve">
    <value>接続エディター</value>
  </data>
  <data name="DataAccessUIStringId.DefaultNameParameter" xml:space="preserve">
    <value>パラメーター</value>
  </data>
  <data name="DataAccessUIStringId.DSTypeEF" xml:space="preserve">
    <value>エンティティ フレームワーク</value>
  </data>
  <data name="DataAccessUIStringId.DSTypeObject" xml:space="preserve">
    <value>オブジェクトのバインド</value>
  </data>
  <data name="DataAccessUIStringId.DSTypeSql" xml:space="preserve">
    <value>データベース</value>
  </data>
  <data name="DataAccessUIStringId.EFConnectionEditorTitle" xml:space="preserve">
    <value>エンティティ フレームワーク データ接続エディター</value>
  </data>
  <data name="DataAccessUIStringId.EFDataMemberEditorTitle" xml:space="preserve">
    <value>エンティティ フレームワーク データ メンバー エディター</value>
  </data>
  <data name="DataAccessUIStringId.EFDataSourceEditorTitle" xml:space="preserve">
    <value>エンティティ フレームワーク データ ソース エディター</value>
  </data>
  <data name="DataAccessUIStringId.EFEditorsNoStoredProcs" xml:space="preserve">
    <value>データ コンテキストで使用可能なストアド プロシージャがありません</value>
  </data>
  <data name="DataAccessUIStringId.EFStoredProcsEditorTitle" xml:space="preserve">
    <value>ストアド プロシージャの管理</value>
  </data>
  <data name="DataAccessUIStringId.Button_Add" xml:space="preserve">
    <value>追加(&amp;A)</value>
  </data>
  <data name="DataAccessUIStringId.Button_Browse" xml:space="preserve">
    <value>参照</value>
  </data>
  <data name="DataAccessUIStringId.Button_Cancel" xml:space="preserve">
    <value>キャンセル(&amp;C)</value>
  </data>
  <data name="DataAccessUIStringId.Button_Next" xml:space="preserve">
    <value>次の ＆</value>
  </data>
  <data name="DataAccessUIStringId.Button_OK" xml:space="preserve">
    <value>OK(&amp;O)</value>
  </data>
  <data name="DataAccessUIStringId.Button_Remove" xml:space="preserve">
    <value>削除(&amp;R)</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_AuthenticationType" xml:space="preserve">
    <value>認証の種類：</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_AuthenticationType_MSSqlServer" xml:space="preserve">
    <value>サーバー認証</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_AuthenticationType_MSSqlWindows" xml:space="preserve">
    <value>Windows 認証</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_Database" xml:space="preserve">
    <value>データベース：</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_Password" xml:space="preserve">
    <value>パスワード：</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_Port" xml:space="preserve">
    <value>ポート:</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_Provider" xml:space="preserve">
    <value>プロバイダー:</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_ServerName" xml:space="preserve">
    <value>サーバー名：</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_ServerType" xml:space="preserve">
    <value>サーバー ＆ タイプ：</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_ServerTypeEmbedded" xml:space="preserve">
    <value>埋め込み</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_ServerTypeServer" xml:space="preserve">
    <value>サーバー</value>
  </data>
  <data name="DataAccessUIStringId.ConnectionProperties_UserName" xml:space="preserve">
    <value>ユーザー名:</value>
  </data>
  <data name="DataAccessUIStringId.ParametersColumn_Expression" xml:space="preserve">
    <value>式</value>
  </data>
  <data name="DataAccessUIStringId.ParametersColumn_Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="DataAccessUIStringId.ParametersColumn_Value" xml:space="preserve">
    <value>値</value>
  </data>
  <data name="DataAccessUIStringId.ParametersColumn_Type" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="DataAccessUIStringId.ParametersColumn_Version" xml:space="preserve">
    <value>バージョン</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilder_Delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilder_Rename" xml:space="preserve">
    <value>名前を変更</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilderColumns_Aggregate" xml:space="preserve">
    <value>集計</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilderColumns_GroupBy" xml:space="preserve">
    <value>グループ化</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilderColumns_Output" xml:space="preserve">
    <value>出力</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilderColumns_SortOrder" xml:space="preserve">
    <value>並べ替え順序</value>
  </data>
  <data name="DataAccessUIStringId.QueryControl_SqlString" xml:space="preserve">
    <value>SQL 文字列：</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseObjectAssembly_ShowOnlyHighlighted" xml:space="preserve">
    <value>強調表示されたアセンブリのみを表示</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseObjectBindingMode_RetrieveSchema" xml:space="preserve">
    <value>データ ソースのスキーマを取得</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageConfigureQuery_Query" xml:space="preserve">
    <value>クエリ</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageConfigureQuery_StoredProcedure" xml:space="preserve">
    <value>ストアド プロシージャ</value>
  </data>
  <data name="DataAccessUIStringId.DataConnectionParametersDialog" xml:space="preserve">
    <value>接続エラー</value>
  </data>
  <data name="DataAccessUIStringId.DataConnectionParametersDialog_Header_UnableConnect" xml:space="preserve">
    <value>データベースに接続できません。詳細は下記を参照してください</value>
  </data>
  <data name="DataAccessUIStringId.Button_Close" xml:space="preserve">
    <value>閉じる</value>
  </data>
  <data name="DataAccessUIStringId.FiltersView" xml:space="preserve">
    <value>フィルター エディタ</value>
  </data>
  <data name="DataAccessUIStringId.WizardPageChooseFileOptions_Options" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="DataAccessUIStringId.ExcelDataSourceWizard_TableItem" xml:space="preserve">
    <value>テーブル</value>
  </data>
  <data name="DataAccessUIStringId.ExcelDataSourceWizard_Title" xml:space="preserve">
    <value>テーブル</value>
  </data>
  <data name="DataAccessUIStringId.MasterDetailEditorInvalidColumnNameMessage" xml:space="preserve">
    <value>は、指定された列を見つけることができない:"{0}"。既存の列の名前を指定します</value>
  </data>
  <data name="DataAccessUIStringId.MasterDetailEditorInvalidColumnQueryNameMessage" xml:space="preserve">
    <value>は、指定されたクエリを見つけることができない:"{0}"。列を選択する前に、既存のクエリの名前を指定します</value>
  </data>
  <data name="DataAccessUIStringId.MasterDetailEditorInvalidQueryNameMessage" xml:space="preserve">
    <value>は、指定されたクエリを見つけることができない:"{0}"。既存のクエリの名前を指定します</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilder_SortAscending" xml:space="preserve">
    <value>昇順に並べ替え</value>
  </data>
  <data name="DataAccessUIStringId.QueryBuilder_SortDescending" xml:space="preserve">
    <value>降順に並べ替え</value>
  </data>
  <data name="DataAccessUIStringId.ExpressionEditorViewTitle" xml:space="preserve">
    <value>式エディタ</value>
  </data>
  <data name="DataAccessUIStringId.ParametersColumn_QueryName" xml:space="preserve">
    <value>クエリ</value>
  </data>
</root>